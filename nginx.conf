server {

    gzip_min_length 1000;
    gzip_buffers 4 8k;
    gzip_http_version 1.0;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/javascript;
    gzip_vary on;
    gzip on;
    gzip_proxied any;

    # The NodeJs (Vue) webserver
    location / {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        proxy_pass http://localhost:3000/;
    }

    # The ROS video server
    location /ros-video/ {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        proxy_pass http://localhost:8181/;
        sub_filter "/snapshot" "/ros-video/snapshot"; # convert all /snapshot... texts(url) to /ros-video/snapshot...
        sub_filter "/stream" "/ros-video/stream"; # convert /stream... urls to /ros-video/stream... Used for the stream_viewer page and actual stream.
        sub_filter_once off;
        sub_filter_types "*";
    }

    # Jupyter Notebook
    location /jupyter/ {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        proxy_pass http://localhost:8888/jupyter/;
    }

    # Wifi Connect
    location /wifi-connect/ {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        # Wifi connect does not map to localhost
        proxy_pass http://192.168.42.1:8080/;
    }

    # Sphinx RTD Docs
    location /docs/ {
        # TODO: do we need login for this?
        # TODO: docs compilation is broken?
        include /etc/nginx/mime.types;
        alias /usr/local/src/mirte/mirte-documentation/_build/html/;
    }

    # ROS bridge websocket
    location /ws/ros {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        proxy_pass http://localhost:9090;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Shell websocket
    location /ws/shell {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        proxy_pass http://localhost:3000/shell;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Linetrace
    location /ws/linetrace {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        proxy_pass http://localhost:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # mDNS client discovery
    location /ws/clients {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        proxy_pass http://localhost:4567;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # VSCode system:
    # /code/ will redirect to :8000 as vscode won't work nicely in a folder
    #
    location /code/ {
        return 301 http://$host:8000/; # that is defined lower
    }

    # custom page when logging in has failed
    error_page 401 /error/401.html; 
    location /error/ {
        alias /var/www/html/;
    }
}

# VSCode server:
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen *:8000; # vscode does not work in a folder
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    location / {
        satisfy any;
        allow 192.168.42.1/21; # 40.1 - 47.1
        allow 192.168.137.0/24;
        #   allow 192.168.2.0/24;
        auth_pam "Authentication Required";
        auth_pam_service_name "nginx";

        proxy_pass http://127.0.0.1:9000/;
    }

    error_page 401 /error/401.html; # custom page when logging in has failed
    location /error/ {
        alias /var/www/html/;
    }
}